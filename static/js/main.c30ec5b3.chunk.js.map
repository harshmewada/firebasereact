{"version":3,"sources":["logo.svg","Components/Header.js","firebase.js","Components/Test/ImageUpload.js","Components/ImageList.js","Components/Tabs.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textAlign","Header","classes","className","AppBar","position","elevation","Toolbar","Typography","variant","edge","Button","color","disabled","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","Firebase","firestore","width","display","alignItems","justifyContent","ImageUplad","useState","image","setImage","thumb","setThumb","imgurl","setImgurl","thumburl","setThumburl","setUpload","uploadprogress","setuploadprogress","React","dialogOpen","setDialogOpen","amoled","setAmoled","artist","setArtist","artistUrl","setArtistUrl","platform","setPlatform","platformUrl","setPlatformUrl","downloadCount","setDownloadCount","saveVisible","setSaveVisible","handleClose","Empty","console","log","style","height","Dialog","open","onClose","aria-labelledby","aria-describedby","fullWidth","DialogTitle","id","DialogContent","DialogContentText","DialogActions","onClick","autoFocus","Grid","container","justify","item","lg","xs","Card","padding","direction","fontSize","border","borderRadius","justifySelf","alignSelf","type","hidden","onChange","e","target","files","Image","ImgChange","ThumbChange","CircularProgress","size","value","textTransform","ref","name","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","TextField","placeholder","getDownloadURL","then","url","margin","label","AristChange","AristUrlChange","platformChange","platformUrlChange","count","DownloadCountChange","Checkbox","checked","collection","add","imageUrl","thumbUrl","artistName","downloads","Number","date","Date","catch","err","alert","ImageList","array","setarray","useEffect","orderBy","where","get","querySnapshot","data","docs","map","doc","tile","key","seconds","src","boxShadow","TabPanel","props","children","index","other","component","role","Box","p","a11yProps","backgroundColor","palette","background","paper","SimpleTabs","setValue","Tabs","event","newValue","aria-label","textColor","Tab","ImageUpload","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c30ec5b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: \"left\"\n  }\n}));\nfunction Header() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" elevation={2}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title} edge=\"start\">\n            Firebase WallPapers\n          </Typography>\n          <Button color=\"inherit\" disabled>\n            Login\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\nexport default Header;\n","import firebase from \"firebase\";\nconst config = {\n  apiKey: \"AIzaSyCXKaET3gLnj1QgiJntkfmEJWDjtpea-60\",\n  authDomain: \"darkpapers-trial.firebaseapp.com\",\n  databaseURL: \"https://darkpapers-trial.firebaseio.com\",\n  projectId: \"darkpapers-trial\",\n  storageBucket: \"darkpapers-trial.appspot.com\",\n  messagingSenderId: \"584474071248\",\n  appId: \"1:584474071248:web:c88b6abd0e0be547d44ed5\",\n  measurementId: \"G-3FB294MPTV\"\n};\nfirebase.initializeApp(config);\nexport default firebase;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport {\n  Grid,\n  Button,\n  CircularProgress,\n  TextField,\n  Card\n} from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Firebase from \"../../firebase\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nconst storage = Firebase.storage();\nconst firestore = Firebase.firestore();\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n}));\nconst ImageUplad = () => {\n  const classes = useStyles();\n  const [image, setImage] = useState();\n  const [thumb, setThumb] = useState();\n  const [imgurl, setImgurl] = useState();\n  const [thumburl, setThumburl] = useState();\n  const [upload, setUpload] = useState(false);\n  const [uploadprogress, setuploadprogress] = useState(0);\n  const [dialogOpen, setDialogOpen] = React.useState(false);\n  const [amoled, setAmoled] = useState(false);\n  const [artist, setArtist] = useState();\n  const [artistUrl, setArtistUrl] = useState();\n  const [platform, setPlatform] = useState();\n  const [platformUrl, setPlatformUrl] = useState();\n  const [downloadCount, setDownloadCount] = useState();\n  const [saveVisible, setSaveVisible] = useState(false);\n  const [amoledArray, setAmoledArray] = useState([]);\n\n  const ImgChange = e => {\n    if (e.target.files[0]) {\n      const Image = e.target.files[0];\n\n      setImage(Image);\n    }\n  };\n  const ThumbChange = e => {\n    if (e.target.files[0]) {\n      const Image = e.target.files[0];\n\n      setThumb(Image);\n    }\n  };\n\n  const AristChange = e => {\n    setArtist(e.target.value);\n  };\n  const AristUrlChange = e => {\n    setArtistUrl(e.target.value);\n  };\n  const platformChange = e => {\n    setPlatform(e.target.value);\n  };\n  const platformUrlChange = e => {\n    setPlatformUrl(e.target.value);\n  };\n  const DownloadCountChange = e => {\n    const count = e.target.value;\n    setDownloadCount(count);\n  };\n  const handleUpload = () => {\n    setUpload(true);\n\n    const UploadTask = storage.ref(`images/${image.name}`).put(image);\n    UploadTask.on(\"state_changed\", snapshot => {\n      // progress function ...\n      const progress = Math.round(\n        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n      );\n      setuploadprogress(progress);\n    });\n    const ThumbTask = storage.ref(`images/${thumb.name}`).put(image);\n    ThumbTask.on(\"state_changed\", snapshot => {\n      // progress function ...\n      const progress = Math.round(\n        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n      );\n      setuploadprogress(progress);\n    });\n\n    setUpload(false);\n  };\n  const getUrl = () => {\n    storage\n      .ref(`images/${image.name}`)\n\n      .getDownloadURL()\n      .then(url => {\n        setImgurl(url);\n      });\n    storage\n      .ref(`images/${thumb.name}`)\n\n      .getDownloadURL()\n      .then(url => {\n        setThumburl(url);\n      });\n  };\n  const FirestoredataUpload = () => {\n    setSaveVisible(true);\n    firestore\n      .collection(\"wallpapers\")\n      .add({\n        name: image.name,\n        imageUrl: imgurl,\n        thumb: thumb.name,\n        thumbUrl: thumburl,\n        artistName: artist ? artist : null,\n        artistUrl: artistUrl ? artistUrl : null,\n        platform: platform ? platform : null,\n        platformUrl: platformUrl ? platformUrl : null,\n        downloads: downloadCount ? Number(downloadCount) : null,\n        amoled: amoled != true ? [] : [\"true\"],\n        date: Number(new Date())\n      })\n      .then(setDialogOpen(true), setSaveVisible(false))\n      .then(() => Empty())\n      .catch(err => alert(\"Error\", err));\n  };\n  const handleClickOpen = () => {\n    setDialogOpen(true);\n  };\n\n  const handleClose = () => {\n    setDialogOpen(false);\n  };\n  const Empty = () => {\n    setImage();\n    setImgurl();\n    setThumb();\n    setImgurl();\n    setArtist();\n    setArtistUrl();\n    setPlatform();\n    setPlatformUrl();\n    setDownloadCount();\n    setuploadprogress(0);\n  };\n  return (\n    <div className={classes.root}>\n      {console.log(\n        \"Image:\",\n        image,\n        \"\\n\",\n        \"Thumb:\",\n        thumb,\n        \"\\n\",\n        \"IMageUrl:\",\n        imgurl,\n        \"\\n\",\n        \"thumburl:\",\n        thumburl,\n        \"\\n\",\n        \"artist:\",\n        artist,\n        \"\\n\",\n        \"artistUrl:\",\n        artistUrl,\n        \"\\n\",\n        \"platform:\",\n        platform,\n        \"\\n\",\n        \"platform Url:\",\n        platformUrl\n      )}\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: \"auto\"\n        }}\n      >\n        <Dialog\n          open={dialogOpen}\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          fullWidth\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Upload\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              <span style={{ color: \"#5aaf76\" }}>Upload Sucessful</span>\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Ok\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Grid\n          container\n          justify=\"flex-start\"\n          alignItems=\"flex-start\"\n          spacing={3}\n        >\n          <Grid item lg={4} xs={12}>\n            <Card style={{ padding: \"15px\" }}>\n              <Grid container direction=\"row\" spacing={3}>\n                <Grid\n                  item\n                  xs={12}\n                  lg={12}\n                  style={{ display: \"flex\", alignItems: \"flex-start\" }}\n                >\n                  <span\n                    style={{\n                      textAlign: \"left\",\n                      color: \"#898080\",\n                      fontSize: \"30px\"\n                    }}\n                  >\n                    Upload Images\n                  </span>\n                </Grid>\n                <Grid item xs={6} lg={6}>\n                  <label\n                    style={{\n                      padding: \"1vh 2vh\",\n                      // backgroundColor: \"#0b2643\",\n                      border: \"2px solid #ffc828\",\n\n                      borderRadius: \"10px\",\n                      display: \"flex\",\n                      color: \"black\",\n                      justifySelf: \"flex-start\",\n                      alignSelf: \"flex-start\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\"\n                    }}\n                  >\n                    <input type=\"file\" hidden onChange={e => ImgChange(e)} />\n                    Image\n                  </label>\n                </Grid>\n                <Grid\n                  item\n                  xs={6}\n                  lg={6}\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\"\n                  }}\n                >\n                  <span style={{ color: \"#808080\" }}>File Name</span>\n                </Grid>\n                <Grid item xs={6} lg={6}>\n                  <label\n                    style={{\n                      padding: \"1vh 0.5vh\",\n                      // backgroundColor: \"#0b2643\",\n                      border: \"2px solid #ffc828\",\n\n                      borderRadius: \"10px\",\n                      display: \"flex\",\n                      color: \"black\",\n                      justifySelf: \"flex-start\",\n                      alignSelf: \"flex-start\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\"\n                    }}\n                  >\n                    <input type=\"file\" hidden onChange={e => ThumbChange(e)} />\n                    Thumbnail\n                  </label>\n                </Grid>\n                <Grid\n                  item\n                  xs={6}\n                  lg={6}\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\"\n                  }}\n                >\n                  <span style={{ color: \"#808080\" }}>File Name</span>\n                </Grid>\n                <Grid\n                  item\n                  xs={8}\n                  lg={6}\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-evenly\",\n                    alignItems: \"center\"\n                  }}\n                >\n                  {uploadprogress === 100 ? (\n                    <span style={{ color: \"#5aaf76\" }}>Success</span>\n                  ) : (\n                    <CircularProgress\n                      size={20}\n                      variant=\"static\"\n                      value={uploadprogress}\n                    />\n                  )}\n                </Grid>\n\n                <Grid\n                  item\n                  xs={4}\n                  lg={6}\n                  style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n                >\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    style={{ textTransform: \"none\" }}\n                    onClick={() => handleUpload()}\n                  >\n                    Upload\n                  </Button>\n                </Grid>\n                <Grid item xs={12} lg={12}>\n                  <TextField\n                    fullWidth\n                    placeholder=\"Image Url\"\n                    value={imgurl}\n                    disabled\n                  />\n                </Grid>\n                <Grid item xs={12} lg={12}>\n                  <TextField\n                    fullWidth\n                    placeholder=\"Thumbnail Url\"\n                    value={thumburl}\n                    disabled\n                  />\n                </Grid>\n                <Grid\n                  item\n                  xs={12}\n                  lg={12}\n                  style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n                >\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={() => getUrl()}\n                  >\n                    Get Urls\n                  </Button>\n                </Grid>\n              </Grid>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} lg={4}>\n            <Card style={{ padding: \"15px\" }}>\n              <Grid container spacing={2}>\n                <Grid\n                  item\n                  xs={12}\n                  lg={12}\n                  style={{ display: \"flex\", alignItems: \"flex-start\" }}\n                >\n                  <span\n                    style={{\n                      textAlign: \"left\",\n                      color: \"#898080\",\n                      fontSize: \"30px\"\n                    }}\n                  >\n                    Artist Info\n                  </span>\n                </Grid>\n                <Grid item xs={12} lg={12}>\n                  <TextField\n                    fullWidth\n                    margin=\"dense\"\n                    label=\"Artist Name\"\n                    value={artist}\n                    variant=\"outlined\"\n                    onChange={e => AristChange(e)}\n                  />\n                </Grid>\n                <Grid item xs={12} lg={12}>\n                  <TextField\n                    fullWidth\n                    margin=\"dense\"\n                    label=\"Artist Link\"\n                    value={artistUrl}\n                    variant=\"outlined\"\n                    onChange={e => AristUrlChange(e)}\n                  />\n                </Grid>\n                <Grid item xs={12} lg={12}>\n                  <TextField\n                    fullWidth\n                    margin=\"dense\"\n                    label=\"Platform Name\"\n                    variant=\"outlined\"\n                    value={platform}\n                    onChange={e => platformChange(e)}\n                  />\n                </Grid>\n                <Grid item xs={12} lg={12}>\n                  <TextField\n                    fullWidth\n                    margin=\"dense\"\n                    label=\"Platform Link\"\n                    variant=\"outlined\"\n                    value={platformUrl}\n                    onChange={e => platformUrlChange(e)}\n                  />\n                </Grid>\n              </Grid>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} lg={4}>\n            <Card style={{ padding: \"15px\" }}>\n              <Grid container spacing={2}>\n                <Grid\n                  item\n                  xs={12}\n                  lg={12}\n                  style={{ display: \"flex\", alignItems: \"flex-start\" }}\n                >\n                  <span\n                    style={{\n                      textAlign: \"left\",\n                      color: \"#898080\",\n                      fontSize: \"30px\"\n                    }}\n                  >\n                    Miscellenous\n                  </span>\n                </Grid>\n                <Grid item xs={12} lg={12}>\n                  <TextField\n                    fullWidth\n                    margin=\"dense\"\n                    label=\"Download Count\"\n                    variant=\"outlined\"\n                    onChange={e => DownloadCountChange(e)}\n                  />\n                </Grid>\n                <Grid\n                  item\n                  xs={12}\n                  lg={12}\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"flexStart\",\n                    alignItems: \"center\"\n                  }}\n                >\n                  <Checkbox\n                    placeholder=\"Amoled\"\n                    checked={amoled}\n                    onChange={() => setAmoled(!amoled)}\n                  />\n                  <span> Amoled</span>\n                </Grid>\n                <Grid\n                  item\n                  xs={6}\n                  lg={8}\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-evenly\",\n                    alignItems: \"center\"\n                  }}\n                >\n                  {saveVisible ? (\n                    <div>\n                      <CircularProgress size={20} />\n                      Saving Data\n                    </div>\n                  ) : null}\n                </Grid>\n                <Grid\n                  item\n                  xs={6}\n                  lg={4}\n                  style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n                >\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => FirestoredataUpload()}\n                  >\n                    Save Data\n                  </Button>\n                </Grid>\n              </Grid>\n            </Card>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\nexport default ImageUplad;\n","import React, { useEffect, useState,} from \"react\";\nimport { Grid, GridList, GridListTile, Container, Card } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport firebase from \"../firebase\";\n\nconst useStyles = makeStyles(theme => ({\nroot:{\n\n},\n\n}));\nconst firestore = firebase.firestore();\n\nexport default function ImageList() {\n  const classes = useStyles();\n  const [array, setarray] = useState([]);\n \n  // const getExlore = ()=>{\n    //Explore Working\n  //   firestore\n  //   .collection(\"wallpapers\")\n  //   .orderBy(\"date\",'desc')\n  //   .get()\n  //   .then(querySnapshot => {\n  //     const data = querySnapshot.docs.map(doc => doc.data());\n  //     console.log(data);\n  //     setarray(data);\n  //   });\n  // }\n  const getExlore = ()=>{\n    firestore\n    .collection(\"wallpapers\")\n    .orderBy(\"downloads\",'asc')\n    .where('downloads','>=',500)\n  \n    .get()\n    .then(querySnapshot => {\n      const data = querySnapshot.docs.map(doc => doc.data());\n      console.log(data);\n      setarray(data);\n    });\n  }\n  useEffect(() => {\n    getExlore()\n     }, [])\n  return (\n   \n    <div className={classes.root}>\n      <Grid container spacing={2} >\n      <Grid item xs={12} lg={12}>\n        <span style={{color:'#808080',textAlign:'center'}}>Image List</span>\n        </Grid>\n        {array.map(tile=><Grid item xs={6} lg={2} key={tile.date.seconds}>\n         \n         <img src={tile.imageUrl} style={{width:'100%',border:'5px solid #e8eae7',boxShadow:'0px 3px 3px -2px'}}/>\n        \n        </Grid>)}\n      </Grid>\n       \n     \n     \n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n// import ImageUpload from \"./imgPicker\";\nimport ImageUpload from './Test/ImageUpload'\nimport ImageList from \"./ImageList\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nexport default function SimpleTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" elevation={1}>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"simple tabs example\"\n          style={{ backgroundColor: \"#fff\" }}\n          textColor=\"primary\"\n        >\n          <Tab label=\"UPload\" {...a11yProps(0)} />\n          <Tab label=\"Grid List\" {...a11yProps(1)} />\n          <Tab label=\"Explore\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        {/* <ImageUpload /> */}\n        <ImageList />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        {/* <ImageList /> */}\n        <ImageUpload/>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        Item Three\n      </TabPanel>\n    </div>\n  );\n}\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport Header from \"./Components/Header\";\n\nimport \"./App.css\";\nimport Tab from \"./Components/Tabs\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Tab />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}